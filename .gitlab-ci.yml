image: ubuntu:24.04

stages:
  - build
  - release

variables:
  MESON_BUILD_DIR: "_build"
  TARBALL_ARTIFACT_PATH: "${MESON_BUILD_DIR}/meson-dist/${CI_PROJECT_NAME}-${CI_COMMIT_TAG}.tar.xz"
  UBUNTU_DEPS:
    appstream-util
    desktop-file-utils
    build-essential
    meson
    rust-1.80-all
    gettext
    yelp-tools
    gi-docgen
    gobject-introspection
    libexiv2-dev
    libgsf-1-dev
    libgtk-4-dev
    libpoppler-glib-dev
    libtag1-dev

include:
  - component: "gitlab.gnome.org/GNOME/citemplates/release-service@master"
    inputs:
      job-stage: release
      dist-job-name: "create_tarball"
      tarball-artifact-path: "${TARBALL_ARTIFACT_PATH}"

before_script:
  - export DEBIAN_FRONTEND=noninteractive
  - export PATH=/usr/lib/rust-1.80/bin:$PATH

build_and_test:
  stage: build
  script:
    - apt-get update
    - apt-get install -y $UBUNTU_DEPS xvfb
    - mkdir ${MESON_BUILD_DIR}
    - meson setup ${MESON_BUILD_DIR}
    - meson compile -C ${MESON_BUILD_DIR}
    - exit_code=0
    - xvfb-run meson test -C ${MESON_BUILD_DIR} || exit_code=$?; if [ "$exit_code" != "0" ]; then echo "Unit tests failed."; cat ${MESON_BUILD_DIR}/meson-logs/testlog.txt; exit 1; fi;

create_tarball:
  stage: release
  script:
    - apt-get update
    - apt-get install -y $UBUNTU_DEPS git-core
    - mkdir ${MESON_BUILD_DIR}
    - meson setup ${MESON_BUILD_DIR}
    - meson compile -C ${MESON_BUILD_DIR}
    - meson dist -C ${MESON_BUILD_DIR} --no-tests
  artifacts:
    name: "${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: "always"
    paths:
      - "${TARBALL_ARTIFACT_PATH}"
  rules:
    - if: $CI_COMMIT_TAG
